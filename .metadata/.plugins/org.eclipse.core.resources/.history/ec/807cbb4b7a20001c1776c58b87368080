//package application;
//
//import javafx.application.Application;
//import javafx.stage.Stage;
//import javafx.scene.Scene;
//import javafx.scene.layout.BorderPane;
//
//
//public class Main extends Application {
//	@Override
//	public void start(Stage primaryStage) {
//		try {
//			BorderPane root = new BorderPane();
//			Scene scene = new Scene(root,400,400);
//			scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
//			primaryStage.setScene(scene);
//			primaryStage.show();
//		} catch(Exception e) {
//			e.printStackTrace();
//		}
//	}
//	
//	public static void main(String[] args) {
//		launch(args);
//	}
//}


package application;

import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.TitledBorder;


public class Main extends JFrame {
	
private static final long serialVersionUID = 36212012028893L;
		
	private JTextField eingabe1, eingabe2;
	private JButton schaltflaecheBerechnen, schaltflaecheBeenden;
	private JLabel ausgabe;
	private String[] operationAuswahl = {"Addition", "Subtraktion", "Multiplikation", "Division"};
	private JComboBox <String> operation;
	
	
	public Main (String string) {

		super(string);
		//insgesamt 3 Panels
		JPanel panelEinAus, panelOperationen, panelButtons;
		
		//die Panels über die Methoden erstellen
		panelEinAus = panelEinAusErzeugen();
		panelOperationen = panelKombinationenErzeugen();
		panelButtons = panelButtonErzeugen();
		
		//ein Gridlayout mit 3 Spalten
		setLayout(new GridLayout(0,3));
		
		//die Panels hinzufügen
		add(panelEinAus);
		add(panelOperationen);
		add(panelButtons);

		//die Standard-Aktion setzen
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		//packen und anzeigen
		pack();
		setVisible(true);
		
		//Größenänderungen sind nicht zugelassen
		//damit das mühsam erstellte Layout nicht durcheinander kommt
		setResizable(false);
	}
	
	
	//die innere Klasse für die Ereignisverarbeitung
	class MeinListener implements ActionListener {
		
		@Override
		
		public void actionPerformed(ActionEvent e) {
			
			//wurde auf Berechnen geklickt?
			//dann eine Methode für die Berechnung aufrufen
			//und das Ergebnis anzeigen			
			if (e.getActionCommand().equals("rechnen")) { 
				ausgabe.setText(berechnen());
			}
			//wurde auf Beenden geklickt?
			//dann das Programm beenden
			if (e.getActionCommand().equals("enden")) 
				System.exit(0);
			
		}
	}
	
	
	//die Methode erzeugt das Panel für die Ein- und Ausgabe
	//und liefert es zurück
	private JPanel panelEinAusErzeugen() {
		JPanel tempPanel = new JPanel();
		//es enthält die Eingabefelder mit beschreibendem Text und die Ausgabe
		//die Länge der Felder ist auf 10 Zeichen beschränkt
		eingabe1 = new JTextField(10);
		eingabe2 = new JTextField(10);
		ausgabe = new JLabel("");
		
		//das Panel bekommt ein GridLaoyut mit 2 Spalten und etwas Abstand
		tempPanel.setLayout(new GridLayout(0,2,10,10));
		//ein beschreibendes Label für die erste Eingabe
		tempPanel.add(new JLabel("Zahl 1:"));
		//das erste Eingabefeld
		tempPanel.add(eingabe1);
		
		//und jetzt das zweite Eingabefeld
		tempPanel.add(new JLabel("Zahl 2: "));
		tempPanel.add(eingabe2);
		
		//und nun das Ausgabefeld für das Ergebnis
		tempPanel.add(new JLabel("Ergebnis: "));
		tempPanel.add(ausgabe);
		
		//einen Rahmen um das Panel ziehen
		tempPanel.setBorder(new TitledBorder("Ein- und Ausgabe"));
		
		//das Panel zurückliefern
		return tempPanel;
	}
	
	
	//die Methode erzeugt das Panel für Auswahl von Operationen
	//und liefert es zurück
	private JPanel panelKombinationenErzeugen() {
		JPanel tempPanel = new JPanel();
		//die Liste fuer das Kombinationsfeld
		operation = new JComboBox<String> (operationAuswahl);
		//die Felder fuer die Operationen		
		tempPanel.add(operation);
		tempPanel.setLayout(new GridLayout(4,4));
		//einen Rahmen um das Panel ziehen
		tempPanel.setBorder(new TitledBorder("Operation: "));
		//das Panel zurückliefern	
		return tempPanel;
	
	}
	
	
	//die Methode erzeugt das Panel für die Schaltflächen
	//und liefert es zurück
	private JPanel panelButtonErzeugen() {
		JPanel tempPanel = new JPanel();
	
		schaltflaecheBeenden = new JButton(" Beenden ");
		//das Aktion-Command setzen
		schaltflaecheBeenden.setActionCommand("enden");
		schaltflaecheBerechnen = new JButton("Berechnen");
		schaltflaecheBerechnen.setActionCommand("rechnen");
		
		//Zwischenpanel für die Schaltflächen
		//das Panel wird linksbündig ausgerichtet mit mehr Abstand
		tempPanel.setLayout(new FlowLayout(FlowLayout.LEFT,20,10));
		tempPanel.add(schaltflaecheBerechnen);
		tempPanel.add(schaltflaecheBeenden);
		
		//die Schaltflächen mit dem Listener verbinden
		MeinListener listener = new MeinListener();
		schaltflaecheBeenden.addActionListener(listener);
		schaltflaecheBerechnen.addActionListener(listener);
		
		//das Panel zurückliefern
		return tempPanel;
	}
	
	
	//die Methode berechnet das Ergebnis und liefert es als 
	//Zeichenkette zurück
	private String berechnen() {
		
		//ergebnis muss initialisiert werden
		double zahl1, zahl2, ergebnis = 0;
		//für die Steuerung der Rückgabe
		boolean fehlerFlag = false;
			
		
		try {
			//den Wert beschaffen, umformen und zuweisen
			zahl1 = Double.parseDouble(eingabe1.getText());
		}
		catch (Exception NumberFormatException) {
			fehlermeldung(eingabe1);
			return ("Nicht definiert");
		}
		
		//Fehlerbehandlung und Ausgabe der Meldung durch eine eigene Methode
		try {
			//den Wert beschaffen, umformen und zuweisen
			zahl2 = Double.parseDouble(eingabe2.getText());
		}
		catch (Exception NumberFormatException) {
			fehlermeldung(eingabe2);
			//das Ergebnis ist nicht definiert
			return ("Nicht definiert");
		}
	
		//welche Operation ist ausgewählt?
		//die Operation ist ueber den Index ermittelt
		if (operation.getSelectedIndex()== 0)
			
			ergebnis = zahl1 + zahl2;
		
		if (operation.getSelectedIndex()== 1)
			
			ergebnis = zahl1 - zahl2;
		
		if (operation.getSelectedIndex()== 2)
			
			ergebnis = zahl1 * zahl2;
		
		if (operation.getSelectedIndex()== 3){
			
			if (zahl2 != 0)
				ergebnis = zahl1 / zahl2;
			else 
				fehlerFlag = true;
		}
		
		if (fehlerFlag == false)
			return Double.toString(ergebnis);
		else
			return ("Nicht definiert");
	}
	
	private void fehlermeldung(JTextField eingabefeld) {
		JOptionPane.showMessageDialog(this, "Ihre Eingabe ist nicht gültig","Eingabefehler", JOptionPane.ERROR_MESSAGE);
		eingabefeld.requestFocus();
	}

 }

